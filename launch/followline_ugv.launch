<launch>

    <arg name="ugv_name" default="wafflepi1"/>

    <arg name="multi_robot_name" default=""/>
    <arg name="set_lidar_frame_id" default="base_scan"/>
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    
    <node pkg="rosserial_python" type="serial_node.py" name="$(arg ugv_name)_turtlebot3_core" output="screen">
        <param name="port" value="/dev/ttyACM0"/>
        <param name="baud" value="115200"/>
        <param name="tf_prefix" value="$(arg multi_robot_name)"/>
    </node>
    
    <arg name="set_frame_id" default="base_scan"/>
    <arg name="lds_model" default="$(env LDS_MODEL)" doc="LDS MODEL [LDS-01, LDS-02]"/>

    <group if = "$(eval lds_model == 'LDS-01')">
        <node pkg="hls_lfcd_lds_driver" type="hlds_laser_publisher" name="$(arg ugv_name)_turtlebot3_lds" output="screen">
            <param name="port" value="/dev/ttyUSB0"/>
            <param name="frame_id" value="$(arg set_frame_id)"/>
        </node>
    </group>
    <group if = "$(eval lds_model == 'LDS-02')">
        <node pkg="ld08_driver" type="ld08_driver" name="$(arg ugv_name)_turtlebot3_lds" output="screen" args="LD08">
            <param name="frame_id" value="$(arg set_frame_id)"/>
        </node>
    </group>
    
    <node pkg="turtlebot3_bringup" type="turtlebot3_diagnostics" name="$(arg ugv_name)_turtlebot3_diagnostics" output="screen"/>
    
    <node pkg="messop_ugv" type="followline" name="$(arg ugv_name)_followline" output="screen" depends="$(arg ugv_name)_turtlebot3_diagnostics"/>
    <node pkg="messop_ugv" type="logger" name="$(arg ugv_name)_messlogger" output="screen"/>

</launch>
